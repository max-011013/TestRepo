import pandas as pd
import json
import bson
from bson import json_util
def json_manipulation():
    df = pd.read_csv("account_data.csv")
    df.to_json("output2.json", indent =1, orient="records")
   #keylist = [,"","State","Country Code","Parent Account"]
    with open("output2.json", 'r') as jsonfile:
        data = json.loads(jsonfile.read())
    for records in data:
        if (records["Account Number"] is not None and records["Account Name"] is not None and records["Address1"] is not None and
             records["City"] is not None and records["Country name"] is not None and records["Zip Code"] is not None and records["State"] is not None
             and records["Country Code"] is not None):
            raise Exception("Some Data is missing")
        records["address2"] = ""
        records["address3"] = ""
        records["address4"] = ""
        records["shipmentProfile"] = ""
        records["paymentTerm"] = ""
        #are these id autogenerated or we have to extract it
        records["system"] = bson.ObjectId()
        records["templateId"] = bson.ObjectId()
        records["organization"] = bson.ObjectId()
        records["isActive"] = True

    #to overcome below error we used json_util    
    #TypeError: Object of type type is not JSON serializable
    data_obj = json_util.dumps(data, indent=4)
    #data.to_json("result_.json", indent=4)
    with open("_result.json", 'w') as outputfile:
        outputfile.write(data_obj)
    
    
json_manipulation()